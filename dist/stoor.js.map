{"version":3,"file":"stoor.js","sources":["../src/index.js"],"sourcesContent":["let storage = {}\n\nconst inMemory = {\n  getItem (key) {\n    return storage[key] || null\n  },\n\n  setItem (key, value) {\n    storage[key] = value\n    return true\n  },\n\n  removeItem (key) {\n    if (key in storage) {\n      return delete storage[key]\n    }\n\n    return false\n  },\n\n  clear () {\n    storage = {}\n    return true\n  }\n}\n\n// http://stackoverflow.com/a/27081419\nconst isSupported = function (storageType) {\n  if (typeof storageType === 'object') {\n    try {\n      storageType.setItem('localStorage', 1)\n      storageType.removeItem('localStorage')\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  return false\n}\n\nclass Stoor {\n  constructor ({ namespace = '', fallback = inMemory, storage = 'local' } = { }) {\n    if (!(this instanceof Stoor)) {\n      return new Stoor({ namespace, fallback, storage })\n    }\n\n    if (!fallback.getItem || !fallback.setItem || !fallback.removeItem) {\n      throw new Error('Invalid fallback provided')\n    }\n\n    if (storage === 'session') {\n      this.storage = isSupported(window.sessionStorage) ? window.sessionStorage : fallback\n    } else {\n      this.storage = isSupported(window.localStorage) ? window.localStorage : fallback\n    }\n\n    this.namespace = namespace\n  }\n\n  get (key, def = null) {\n    if (Array.isArray(key)) {\n      return key.map(currentKey => {\n        const namespacedKey = `${this.namespace}:${currentKey}`\n        return JSON.parse(this.storage.getItem(namespacedKey))\n      })\n    }\n\n    const namespacedKey = `${this.namespace}:${key}`\n\n    try {\n      const result = JSON.parse(this.storage.getItem(namespacedKey))\n      return result !== null ? result : def\n    } catch (error) {\n      return def\n    }\n  }\n\n  set (key, value) {\n    if (Array.isArray(key)) {\n      return key.map(pair => {\n        const [key, value] = pair\n        const namespacedKey = `${this.namespace}:${key}`\n        return this.storage.setItem(namespacedKey, JSON.stringify(value))\n      })\n    }\n\n    const namespacedKey = `${this.namespace}:${key}`\n    return this.storage.setItem(namespacedKey, JSON.stringify(value))\n  }\n\n  remove (key) {\n    if (Array.isArray(key)) {\n      return key.map(currentKey => {\n        const namespacedKey = `${this.namespace}:${currentKey}`\n        return this.storage.removeItem(namespacedKey)\n      })\n    }\n\n    const namespacedKey = `${this.namespace}:${key}`\n    return this.storage.removeItem(namespacedKey)\n  }\n\n  clear () {\n    return this.storage.clear()\n  }\n}\n\nexport default Stoor\n"],"names":["let","storage","inMemory","getItem","key","setItem","value","removeItem","clear","isSupported","storageType","e","Stoor","ref","this","namespace","fallback","Error","window","sessionStorage","localStorage","get","def","Array","isArray","map","currentKey","JSON","parse","namespacedKey","const","result","error","set","pair","stringify","remove"],"mappings":"AAAAA,IAAIC,KAEEC,GACJC,iBAASC,GACP,OAAOH,EAAQG,IAAQ,MAGzBC,iBAASD,EAAKE,GAEZ,OADAL,EAAQG,GAAOE,GACR,GAGTC,oBAAYH,GACV,OAAIA,KAAOH,UACKA,EAAQG,IAM1BI,iBAEE,OADAP,MACO,IAKLQ,EAAc,SAAUC,GAC5B,GAA2B,iBAAhBA,EACT,IAGE,OAFAA,EAAYL,QAAQ,eAAgB,GACpCK,EAAYH,WAAW,iBAChB,QACAI,GACP,OAAO,EAIX,OAAO,GAGHC,EACJ,WAAaC,uDAAc,oCAAeX,mBACxC,kBAD4D,WACtDY,gBAAgBF,UACb,IAAIA,aAAQG,WAAWC,UAAUf,IAG1C,IAAKe,EAASb,UAAYa,EAASX,UAAYW,EAAST,WACtD,MAAM,IAAIU,MAAM,6BAIhBH,KAAKb,QADS,YAAZA,EACaQ,EAAYS,OAAOC,gBAAkBD,OAAOC,eAAiBH,EAE7DP,EAAYS,OAAOE,cAAgBF,OAAOE,aAAeJ,EAG1EF,KAAKC,UAAYA,eAGnBM,aAAKjB,EAAKkB,cACR,kBADc,MACVC,MAAMC,QAAQpB,GAChB,OAAOA,EAAIqB,aAAIC,GAEb,OAAOC,KAAKC,MAAMd,EAAKb,QAAQE,QADNW,gBAAkBY,UAKzCG,EAAmBf,mBAAkBV,EAE3C,IACE0B,IAAMC,EAASJ,KAAKC,MAAMd,KAAKb,QAAQE,QAAQ0B,WAC7B,OAAXE,EAAkBA,EAAST,QAC3BU,UACAV,gBAIXW,aAAK7B,EAAKE,cACR,OAAIiB,MAAMC,QAAQpB,GACTA,EAAIqB,aAAIS,GAGb,OAAOpB,EAAKb,QAAQI,QADKS,qBACkBa,KAAKQ,mBAK7CrB,KAAKb,QAAQI,QADKS,mBAAkBV,EACAuB,KAAKQ,UAAU7B,iBAG5D8B,gBAAQhC,cACN,OAAImB,MAAMC,QAAQpB,GACTA,EAAIqB,aAAIC,UAENZ,EAAKb,QAAQM,WADKO,gBAAkBY,KAMxCZ,KAAKb,QAAQM,WADKO,mBAAkBV,gBAI7CI,iBACE,OAAOM,KAAKb,QAAQO"}